% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/segment.R
\name{segmentClusters}
\alias{segmentClusters}
\title{segmenTier - main wrapper interface, to be used in commandline script}
\usage{
segmentClusters(seq, csim, score = "ccor", M = 175, Mn = 20, a = 2,
  nui = 1, multi = "min", multib = "min", nextmax = TRUE, ncpu = 1,
  verb = 1, save.mat = "")
}
\arguments{
\item{seq}{a clustering sequence}

\item{csim}{cluster-cluster or position-cluster similarity
matrix, for scoring functions ccor and icor, respectively}

\item{score}{the scoring function to be used: "ccor", "icor" or "cls"}

\item{M}{penalty for short sequences}

\item{Mn}{penalty for nuissance cluster, Mn<M will allow shorter distances
between segments}

\item{a}{todo}

\item{nui}{TODO}

\item{multi}{handling of multiple k with max. score in forward phase, see
Details. Either "min" (default) or "max"}

\item{multib}{handling of multiple k with max. score in back-trace phase, see
Details. Either "min" (default), "max" or "skip"}

\item{nextmax}{go backwards while score is increasing before openening a
new segment, default is TRUE}

\item{ncpu}{number of available cores (CPUs), passed to
\code{parallel::mclapply} by \code{\link{calculateScoringMatrix}}}

\item{verb}{level of verbosity, 0: no output, 1: progress messages}

\item{save.mat}{store matrices S(c,i) and K(c,i) for plotting and inspection,
mostly useful for debugging or illustration of the algorithm}
}
\description{
segmenTier - main wrapper interface, to be used in commandline script
}
\details{
This is the main R wrapper function for the segmentation algorithm.
It takes a sequence of clusterings and returns segments of
consistent clusters. It runs the dynamic programing algorithm for
a selected scoring function and an according cluster similarity matrix,
followed by the  back-tracing step to find segments.
Some more details of the algorithm can be tuned, but these usually
have little effect on real-life data sets.
}

